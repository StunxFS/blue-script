import "core/test"
import { Directory, File } from "std/fs"
import * from "std/math"

extern fn require(path: string) any

var my_var := 9

const ALPHA := 0x0

class Item {}

pub fn sumtype(x: number | string | Item) {}

class Person {
    name: string
    age: number := 15

    items: []Item := [Item()]
    magic: [4]number := [1, 2, 3, 4]!

    map: {string:number} := {
        "First Key": 99,
        "Second Key": 100
    }

    tuple: (number, ?lua.string) := (1, nil)

    fn setAge(self, age: number) {
        self.age = age
    }

    fn mkdir(path: lua.string := "/") number {
        @assert(path)
    }
}

fn main() {
    x := 0222_666.0e4
    a := 123
    q, m, c := (99, true, nil)
    name := "StunxFS"
    name = 999
    println("Hello World!")
    _ = math.pow(2)
    std.my_func()
    if (true) q := 3
    if (false) {
        s := if (true) {
            99
        } else if (99) {
            99
        } else {
            100
        }
    }
    while (nil) m += 4
    switch (name) {
        "holaa" -> m = 99,
        "wb", "js" -> m = 1000,
        else -> exit
    }
    switch {
        true -> true,
        false -> false
    }
}

